# https://atcoder.jp/contests/typical90/tasks/typical90_e
#
# N<=10**18桁
# 2<=B<=30
# 1<=K<=9
#
# ナイーブに考えると1~9の9**N通りを列挙してBの倍数であるかチェックだがどう考えてもTLE
# そもそも10**18桁の数値なんて多倍調でも表現できない。となると合同式辺りを使ってあまりに着目するする必要があるか。
# いやmod使うとかレベルではないか。もう数学的に一気に答えが出せる系の技が必要そう？
# 勘違いしてて、`1~N桁までの数`ではなく`N桁の数`だけだ。なので、10**(N-1)~10**N-1までの数を考えれば良い。
# そうなると1点問題の制約ならbit全探索なり使って全列挙で検証すれば十分いけそう。
# 2の3点問題はNが10**18桁の場合があるから5secでも10**18個あるので全列挙では無理そう。
# あとは倍数の方から考えるか？B<=30だと2の倍数/3の倍数/素数*素数(1個)/素数(8個)なので少ない。
#
# 全くわからん。解説見る。
# https://twitter.com/e869120/status/1378527948563615746
#
# 解説読んでもあんまりわからん

N, B, K = gets.split.map(&:to_i)
c = gets.split.map(&:to_i)
mod = 10 ** 9 + 7

# 桁DPを使った解法: 1だけ解ける
dp = Array.new(10009) { Array.new(33, 0) }
dp[0][0] = 1
N.times do |i|
  B.times do |j|
    1.upto(K) do |k|
      nex = (10 * j + c[k - 1]) % B
      dp[i + 1][nex] += dp[i][j]
      dp[i + 1][nex] %= mod
    end
  end
end

puts(dp[N][0])
