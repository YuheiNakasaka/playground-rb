# https://atcoder.jp/contests/abc176/tasks/abc176_d
#
# ■考えたこと
# 目的地と最も近くなるマス目まで行ってワープ魔法を使う。
# その地点からまた目的地までの最短距離を求めて、いけるところまで行く。
# そんでまたワープ魔法を使う。これを繰り返す。最短マスというのがわからん。
# では、まず目的地の座標x方向に壁にぶつかるまで歩く、その際y方向に進めたらy方向に壁にぶつかるまで歩く、みたいな感じで深さor幅優先探索する、限界まで行ったらワープ魔法を使うとどうか？
# どこからワープ先するとベストなのかも複数あるのでどうしたものか。DPとか使うのか？マス目の問題だし微妙か？
# ■解説
# BFSを二回やる感じ。01-BFSとは...
# https://atcoder.jp/contests/abc176/editorial/65
#
# 01-BFSの解説(辺の長さが0または1である有向グラフにおいて、ある1つの始点から全頂点への最短路の長さを効率的な計算時間で求めよ。的なやつを解くアルゴリズム)
# 幅優先探索とダイクストラ法の知識が必要
# dequeを使う問題は先端と末端用にキューを二つ持つことでも解決できる。というかshift/unshiftとpop/pushがあるからArrayで十分。
# https://betrue12.hateblo.jp/entry/2018/12/08/000020
#
# 移動Aで行ける範囲でグループ分け。連結成分ごとに考えてグラフを作る。といううやり方もあった。
# https://ntk-ta01.hatenablog.com/entry/2020/08/23/113117
# https://hiramekun.hatenablog.com/entry/2020/08/23/033048
#
# グリッド(マス目)の問題はグラフにして考えることが結構多いんだな〜。特に迷路は幅優先探索で解くことが多い。
