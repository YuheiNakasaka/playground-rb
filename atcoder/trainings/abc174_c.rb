# https://atcoder.jp/contests/abc174/tasks/abc174_c
#
# ■考えたこと
# 7,77,777...を繰り返す数列をKで割り切れるか順に調べていく？だとダメっぽいかね。上限がわからんから割り切れるものがなかった場合の停止条件がわからんか。
# となると数学的な法則に目を向ける必要がある。
# 7*1,7*11,7*111,7*1111,7*41*271...素因数分解しても法則ねぇ〜
# 答えとして999982というのがあるが、これはすなわち999982桁の数値(7777...7777)も倍数としてありえるということ。完全に数学的な法則がある。
# 約数/余り/素因数分解/約数列挙/最大公約数/最小公倍数/拡張ユークリッドの互除法など他になんかあるか？
# ■解説
# modと漸化式と鳩ノ巣原理で絞ると高々O(K)で解けるらしい。わからなかった...
# 7,7*10+7,7*100+7*10+7,7*1000+7*100+7*10+7...という数列
# ai = 7 mod K (i = 1)
# ai = 10ai-1 + 7 mod K (i >= 2)
# https://atcoder.jp/contests/abc174/editorial/28
#
# 一方雑に1000万項くらい計算するだけでもC問題ならいけるというやり方も。条件のKが10^6という微妙に解ける範囲なので疑った方が良かったか...
# https://qiita.com/u2dayo/items/83faeb39ac14c63c8986#c%E5%95%8F%E9%A1%8Crepsept

K = gets.to_i
a = Array.new(10 ** 6 + 1, -1)
a[1] = 7 % K
2.upto(K) do |i|
  a[i] = (a[i - 1] * 10 + 7) % K
end

ans = -1
1.upto(K) do |i|
  if a[i] == 0
    ans = i
    break
  end
end

puts(ans)
